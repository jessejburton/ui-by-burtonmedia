:root {
  /* Colors by Name */
  --white: #f4fdff;
  --black: #4E3D42;
  --grey-1: #e6e4f0;
  --grey-2: #9F9F92;
  --blue: #3E7CB1;
  --red: #dd65a9;
  --green: #C9D5B5;
  --yellow: #d3ce77;

  /* Sizes */
  --font-size-0: 0.8em;
  --fontSize-1: 1em;
  --fontSize-2: 1.25em;
  --fontSize-3: 1.563em;
  --fontSize-4: 1.953em;
  --fontSize-5: 2.441em;
  --fontSize-6: 3.052em;
  --space-1: 1.15em;
  --space-2: 2.15em;
  --space-3: 3.15em;
  --space-4: 4.15em;
  --space-5: 5.15em;
  --rounded-1: 3px;

  /* Colors by Use */
  --primary: var(--blue);
  --primaryDark: #2f5e84;
  --backgroundColor: var(--grey-1);
  --fontColor: var(--black);
  --blockQuoteBackgroundColor: var(--white);
  --blockQuoteColor: var(--grey-2);
  --headingColor: var(--primary);
  --headerBackgroundColor: var(--primary);
  --headerFontColor: var(--grey-1);
  --sideNavItemBG: var(--backgroundColor);
  --sideNavItemColor: var(--blue);
  --sideNavItemBGHover: var(--blue);
  --sideNavItemColorHover: var(--grey-1);

  /* Typography */
  --bodyFont: 'Roboto', sans-serif;
  --bodyLineHeight: 1.65;
  --headingFont: 'Raleway', sans-serif;
  --maxParagraphWidth: 65ch;

  /* Forms */
  --inputBorderWidth: 1px;
  --inputBorderRadius: 3px;
  --buttonBackgroundColor: var(--primary);
  --buttonColor: var(--grey-1);
  --buttonBorder: none;
  --buttonBackgroundColorHover: var(--primaryDark);
  --buttonColorHover: var(--grey-1);
  --buttonBorderColor: transparent;
  --buttonFontWeight: 700;
  --buttonTextTransform: uppercase;
  --buttonFontSize: 1em;
  --buttonBorderWidth: var(--inputBorderWidth);
  --buttonBorderRadius: none;

  /* Tables */
  --tableHeaderBackgroundColor: var(--grey-2);
  --tableHeaderColor: var(--white);
  --tableHeaderSpace: 0.6em;
  --tableRowBackgroundOdd: var(--grey-1);
  --tableRowBackgroundEven: var(--white);
  --tableColor: var(--fontColor);
  --tableSpace: 0.5em 1em;
  --tableFooterBackgroundColor: var(--black);
  --tableFooterColor: var(--white);
  --tableFooterSpace: 0.5em 1em;

  /* Shadows */
  --height-1:	0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --height-2:	0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --height-3:	0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --height-4:	0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  --height-5:	0 25px 50px -12px rgba(0, 0, 0, 0.25);

  /* Layout */
  --maxContentWidth: 1200px;
  --sideBarWidth: 300px;
  --headerHeight: var(--space-5);
  --mainContentSpace: var(--space-3);
  --columnGap: var(--space-3);

  /* Styling */
  --line: 1px solid var(--grey-2);

  /* Animations & Transitions */
  --standardTransition: .3s ease;
}

/* Themes */
.dark,
body[data-theme=dark] {
    --blue: var(--white);
    --primary: var(--white);
    --primaryDark: var(--white);
    --backgroundColor: var(--black);
    --fontColor: var(--white);
    --blockQuoteColor: var(--black);
    --headingColor: var(--white);
    --headerBackgroundColor: var(--black);
    --headerFontColor: var(--white);
    --sideNavItemBG: var(--black);
    --sideNavItemColor: var(--white);
    --sideNavItemBGHover: var(--white);
    --sideNavItemColorHover: var(--black);
    --line: 1px solid var(--white);
    --buttonBackgroundColor: var(--white);
    --buttonColor: var(--black);
    --buttonBackgroundColorHover: var(--black);
    --buttonColorHover: var(--white);
    --buttonBorderColor: var(--white);
}

.high-contrast,
body[data-theme=high-contrast] {
  --white: #FFFFFF;
  --black: #000000;
  --grey: #585852;
  --blue: #020f49;
  --red: #dd65a9;
  --green: #C9D5B5;
  --yellow: #d3ce77;

  --primary: var(--blue);
  --primaryDark: var(--black);
  --backgroundColor: var(--white);
  --fontColor: var(--black);
  --blockQuoteColor: var(--blue);
  --headingColor: var(--white);
  --headerBackgroundColor: var(--blue);
  --headerFontColor: var(--white);
  --sideNavItemBG: var(--white);
  --sideNavItemColor: var(--blue);
  --sideNavItemBGHover: var(--blue);
  --sideNavItemColorHover: var(--white);
  --line: 1px solid var(--blue);
  --buttonBackgroundColor: var(--blue);
  --buttonColor: var(--white);
  --buttonBackgroundColorHover: var(--black);
  --buttonColorHover: var(--white);
  --buttonBorderColor: var(--white);

  header select {
    border-color: var(--white);
  }
}

/* Mixins */
@mixin link-hover {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0;
    opacity: 0.6;
    background-color: var(--primary);
    transition: height .2s ease;
  }

  &:hover::after {
    height: 3px;
  }
}

/* Styles */

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  background-color: var(--backgroundColor);
  font-family: var(--bodyFont);
  font-weight: 400;
  line-height: var(--bodyLineHeight);
  color: var(--fontColor);

  &.loading {
    overflow: hidden;
    width: 100vw;
    height: 100vh;
  }
}

header {
  background-color: var(--headerBackgroundColor);
  color: var(--headerFontColor);
  height: var(--headerHeight);
  width: 100%;
  padding: var(--space-1) var(--space-2);
  display: flex;
  justify-content: space-between;
  align-items: center;

  div:first-child {
    font-size: var(--fontSize-4);
  }

  nav {
    display: flex;
    align-items: center;

    a {
      display: block;
      color: inherit;
      font-size: var(--fontSize-2);
      text-decoration: none;
      text-transform: uppercase;
    }

    > * + * {
      margin-left: var(--space-1);
    }

    select {
      padding: 0.8em 1.15em;
      background-color: var(--headerBackgroundColor);
      color: var(--headerColor);
      border: var(--line);
      border-radius: var(--inputBorderRadius);
    }
  }

  /*  You can make the header fixed and the
      content will adjust accordingly */
  &.fixed {
    position: fixed;
    top: 0;
    left: 0;
    box-shadow: var(--height-3);
    z-index: 1000;

    & + main {
      margin-top: calc(var(--headerHeight) + var(--mainContentSpace));
    }
  }
}

main {
  max-width: var(--maxContentWidth);
  margin: var(--mainContentSpace) auto;
  padding: 0 var(--mainContentSpace);
}

main > aside {
  grid-area: sidebar;

  nav {
    position: sticky;
    top: calc(var(--headerHeight) + var(--mainContentSpace));
    display: flex;
    flex-direction: column;

    a {
      padding: 0.6em 1em;
      background-color: var(--sideNavItemBG);
      color: var(--sideNavItemColor);
      transition: background-color var(--standardTransition);
      text-decoration: none;
      font-size: var(--fontSize-1);
      position: relative;
      height: 3em;

      &:hover,
      &.active {
        background-color: var(--sideNavItemBGHover);
        color: var(--sideNavItemColorHover);
      }

      & > a {
        background-color: red!important;
      }
    }

    & > div {
      display: flex;
      flex-direction: column;
      transition: all var(--standardTransition);

      &:not(.open) a:first-child::after {
        content: '▼';
        font-size: var(--font-size-0);
        padding-left: 0.5em;
      }

      &:not(.open) a:not(:first-child){
        padding: 0;
        height: 0;
        overflow: hidden;
      }

      &.open a:first-child::after {
        content: '▲';
        font-size: var(--font-size-0);
        padding-left: 0.5em;
      }

      &.open a:not(:first-child){
        text-indent: 1em;
      }
    }
  }
}

main > section {
  grid-area: content;
}

main section article + article {
  margin-top: var(--space-5);
}

hr {
  margin: var(--space-4) 0;
  border: var(--line);
  opacity: 0.3;
}

p {
  max-width: var(--maxParagraphWidth);
  margin-bottom: var(--space-1);

  a {
    color: var(--primary);
    text-decoration: none;
    font-weight: 500;
    @include link-hover;
  }
}

blockquote {
  font-size: 1.15em;
  font-style: italic;
  margin: var(--space-2) 0;
  color: var(--blockQuoteColor);
  background-color: var(--blockQuoteBackgroundColor);
  padding: var(--space-2);
  max-width: calc(var(--maxParagraphWidth) - (2 * var(--space-2)));
  border: var(--line);
  border-radius: var(--rounded-1);
  box-shadow: var(--height-5);

  cite {
    display: block;
    text-align: right;
    font-weight: 600;

    &::before {
      content: '~ ';
    }
  }
}

h1, h2, h3, h4, h5 {
  margin: 2.75rem 0 1.05rem;
  font-family: var(--headingFont);
  font-weight: 400;
  line-height: 1.15;
  color: var(--primary);
}

h1 + article {
  margin-top: var(--space-2);
}

h1 {
  margin-top: 0;
  font-size: var(--fontSize-6);

  & + h1 {
    margin-top: 3rem;
  }
}

h2 {font-size: var(--fontSize-5);}

h3 {font-size: var(--fontSize-4);}

h4 {font-size: var(--fontSize-3);}

h5 {font-size: var(--fontSize-2);}

small, .small { font-size: var(--fontSize-0);}

form {
  & > div {
    margin-bottom: var(--space-2);
  }

  label {
    color: var(--primary);
    padding-left: 0.5em;
  }

  input[type=text],
  input[type=email],
  input[type=phone],
  input[type=date],
  input[type=number] {
    width: 100%;
    padding: 0.8em 1em;
    border: var(--inputBorderWidth) solid var(--grey);
    border-radius: var(--inputBorderRadius);

    &:focus {
      outline: none;
      box-shadow: var(--height-2);
      border-color: var(--primary);
    }
  }

  select {
    width: 100%;
    padding: 0.8em 1em;
    border: var(--inputBorderWidth) solid var(--grey);
    border-radius: var(--inputBorderRadius);

    &:focus {
      outline: none;
      box-shadow: var(--height-2);
      border-color: var(--primary);
    }
  }

  .select-container {
    position: relative;

    &::after {
      content: '▼';
      position: absolute;
      right: 0;
      top: 0;
      height: 100%;
      width: 2.2em;
      font-size: 1.2em;
      display: flex;
      align-items:center;
      justify-content: center;
      background-color: var(--buttonBackgroundColor);
      color: var(--buttonColor);
      pointer-events: none;
      transition: background-color .3s ease, color .3s ease;
    }

    select {
      appearance: none;
      padding: 0.9em 1em;
    }

    &:hover::after {
      background-color: var(--buttonBackgroundColorHover);
      color: var(--buttonColorHover);
    }
  }

  ::placeholder {
    color: var(--grey);
  }

  /* CHECKBOXES & RADIOS */
  input[type=radio],
  input[type=checkbox] {
    visibility: hidden;
    pointer-events: none;
  }

  // Radios
  input[type=radio] + label {
    position: relative;
    cursor: pointer;

    &::before {
      content: '';
      position: absolute;
      left: 0;
      transform: translate(-0.75em, 0.3em);
      width: 0.9em;
      height: 0.9em;
      background-color: var(--buttonColor);
      border: var(--inputBorderWidth) solid var(--buttonBackgroundColor);
      border-radius: 50%;
    }

    &::after {
      content: '';
      position: absolute;
      left: 0;
      transform: translate(-0.55em, 0.5em);
      width: 0.5em;
      height: 0.5em;
      background-color: var(--buttonBackgroundColor);
      border-radius: 50%;
      opacity: 0;
      transition: opacity .3s ease;
    }
  }

  // Checkboxes
  input[type=checkbox] + label {
    position: relative;
    cursor: pointer;

    &::before {
      content: '';
      position: absolute;
      left: 0;
      transform: translate(-0.75em, 0.3em);
      width: 0.9em;
      height: 0.9em;
      background-color: var(--buttonColor);
      border: var(--inputBorderWidth) solid var(--buttonBackgroundColor);
    }

    &::after {
      content: '🗸';
      position: absolute;
      left: 0;
      transform: translate(-0.5em, -0.35em);
      font-weight: 900;
      font-size: 1.5em;
      overflow: visible;
      width: 1em;
      height: 1em;
      opacity: 0;
      transition: opacity .3s ease;
    }
  }

  input[type=checkbox]:checked + label,
  input[type=radio]:checked + label {
    font-weight: 600;
  }

  input[type=checkbox]:checked + label::after,
  input[type=radio]:checked + label::after {
    opacity: 1;
  }

  button {
    padding: 0.8em 1.15em;
    background-color: var(--buttonBackgroundColor);
    color: var(--buttonColor);
    border: var(--buttonBorder);
    font-size: var(--buttonFontSize);
    font-weight: var(--buttonFontWeight);
    text-transform: var(--buttonTextTransform);
    transition: background-color .3s ease, color .3s ease;
    border: var(--buttonBorderWidth) solid var(--buttonBorderColor);
    border-radius: var(--buttonBorderRadius);
    cursor: pointer;

    & + button {
      margin-left: 0.5em;
    }

    &.small {
      font-size: calc(var(--buttonFontSize) - 0.2em);
    }
    &.large {
      font-size: calc(var(--buttonFontSize) + 0.2em);
    }

    i:first-child,
    svg:first-child{
      margin-right: 0.5em;
    }

    i:last-child,
    svg:last-child{
      margin-left: 0.5em;
    }

    i:only-child,
    svg:only-child{
      margin: 0 0.25em;
    }

    &:hover {
      background-color: var(--buttonBackgroundColorHover);
      color: var(--buttonColorHover);
    }

    &.inverted {
      background-color: var(--buttonColor);
      color: var(--buttonBackgroundColor);
      border: var(--buttonBorderWidth) solid var(--buttonBackgroundColor);

      &:hover {
        background-color: var(--primaryDark);
        color: var(--buttonColor);
      }
    }

    &.link {
      padding: 0;
      display: inline;
      text-transform: initial;
      background-color: transparent;
      color: var(--buttonBackgroundColor);
      border: none;

      @include link-hover;
    }
  }

  & + form {
    margin-top: var(--space-4);
  }
}

/* LOADERS */
section[name=loading]{
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  position: fixed;
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  color: var(--primary);
  background-color: var(--backgroundColor);
  opacity: 0;
  pointer-events: none;
}

body.loading section[name=loading]{
  opacity: 1;
  pointer-events: all;
}

.loader-updown {
  span {
    display: inline-block;
    position: relative;
    width: 0.75em;
    height: 0.75em;
    background-color: var(--primary);
    border-radius: 50%;
    animation: upDown;
    animation-duration: 1s;
    animation-iteration-count: infinite;

    &:nth-child(even){
      animation-delay: .5s;
    }
  }
}

.loader-inout {
  span {
    display: inline-block;
    position: relative;
    width: 0.75em;
    height: 0.75em;
    background-color: var(--primary);
    border-radius: 50%;
    animation: inOut;
    animation-duration: 1s;
    animation-iteration-count: infinite;

    &:nth-child(even){
      animation-delay: .5s;
    }
  }
}

@keyframes upDown {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(1em);
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes inOut {
  0% {
    transform: scale(0.5);
  }
  50% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.5);
  }
}

/* TABLES */
table {
  border: none;
  width: 100%;
  border-collapse: collapse;

  thead {
    th {
      background-color: var(--tableHeaderBackgroundColor);
      color: var(--tableHeaderColor);
      padding: var(--tableHeaderSpace);
      text-align: left;
    }
  }

  tbody {
    td {
      padding: var(--tableSpace);
      color: var(--tableColor);
    }

    tr:nth-child(even) {
      background-color: var(--tableRowBackgroundEven);
    }
    tr:nth-child(odd) {
      background-color: var(--tableRowBackgroundOdd);
    }
  }

  tfoot {
    tr {
      background-color: var(--tableFooterBackgroundColor);
      color: var(--tableFooterColor);
    }

    td {
      padding: var(--tableFooterSpace);
    }
  }
}

.layout-fullwidth {
  max-width: none;

  & > * {
    margin-bottom: var(--space-3);
  }
}

.layout-no-sidebar {
  width: 100%;

  & > aside {
    display: none;
  }
}

.layout-sidebar {
  display: grid;
  column-gap: var(--columnGap);
}

.layout-sidebar-left {
  grid-template-columns: var(--sideBarWidth) 1fr;
  grid-template-areas: "sidebar content";
}

.layout-sidebar-right {
  grid-template-columns: 1fr var(--sideBarWidth) ;
  grid-template-areas: "content sidebar";
}

/* Grid */
.grid {
  --gridColumns: 2;
  display: grid;
  grid-template-columns: repeat(var(--gridColumns), 1fr);
  column-gap: var(--space-2);
}

.columns-3 {
  --gridColumns: 3;
}

.columns-4 {
  --gridColumns: 4;
}

/* Flex */
.flex {
  display: flex;
  align-items: center;
}

.split {
  flex-flow: wrap;
  justify-content: space-between;
}

.flex-stacked {
  flex-direction: column;
}



